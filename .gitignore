# OS junk files
.DS_Store
[Tt]humbs.db

# Temp files
*~

#Eclipse
.project
.classpath
.settings
.checkstyle
.apt_generated
.metadata

#IntelliJ IDEA
.idea
*.iml
*.ipr
*.iws

# MysqlWorkbench
*.mwb.bak

# Ant
cache.properties

# Log
*.log

# Lock
package-lock.json

# Node
node_modules/

# Symfony
symfony/var/cache/
symfony/var/logs/

#Sonar
.scannerwork/

# Docker-sync
.docker-sync

docker-sync\.yml

symfony/consumers/config\.js

#Specific files for import
ics-import/matchingEmails\.json
ics-import/emailsUsage\.json

symfony/public/bundles/

symfony/.env.local

ics-import/exceptions.json

ics-import/id_rsa

#Mutagen file
mutagen.yml.lock

.localstack/

# Elastic Beanstalk Files
.elasticbeanstalk/*
!.elasticbeanstalk/*.cfg.yml
!.elasticbeanstalk/*.global.yml

#### TERRAFORM ####
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
#### END TERRAFORM ####

consumers/infra/lambda_function_payload.zip
/symfony/config/packages/dev/twig.yaml
/tmp
symfony_bck
